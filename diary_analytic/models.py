# diary_analytic/models.py

from django.db import models

# -------------------------------
# üìÖ –ú–æ–¥–µ–ª—å Entry (–¥–µ–Ω—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ)
# -------------------------------

class Entry(models.Model):
    # –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –∑–∞–ø–∏—Å–∏ (1 —Å—Ç—Ä–æ–∫–∞ = 1 –¥–µ–Ω—å)
    date = models.DateField(unique=True)

    # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –¥–µ–Ω—å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)
    comment = models.TextField(blank=True)

    def __str__(self):
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω–∫–µ: Entry for 2025-05-12
        return f"Entry for {self.date}"

    # –ü—Ä–∏–º–µ—Ä: Entry.objects.get(date="2025-05-12") ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ —ç—Ç—É –¥–∞—Ç—É


# ------------------------------------------
# üìå –ú–æ–¥–µ–ª—å Parameter (—Ç–∏–ø –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞)
# ------------------------------------------

class Parameter(models.Model):
    # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–ª—é—á (–Ω–∞–ø—Ä–∏–º–µ—Ä: "toshn", "ustalost")
    key = models.CharField(max_length=100, unique=True)

    # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
    name = models.CharField(max_length=255)

    # –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–∫–ª—é—á–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ UI –∏ —Ä–∞—Å—á—ë—Ç–æ–≤
    is_active = models.BooleanField(default=True)

    # –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    description = models.TextField(blank=True, default="")

    def __str__(self):
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω–∫–µ: "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"
        return self.name

    # –ü—Ä–∏–º–µ—Ä: Parameter(key="toshn", name="–¢–æ—à–Ω–æ—Ç–∞", is_active=True)


# ------------------------------------------------
# üìà –ú–æ–¥–µ–ª—å EntryValue (–∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∑–∞ –¥–µ–Ω—å)
# ------------------------------------------------

class EntryValue(models.Model):
    # –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–Ω—è (Entry)
    entry = models.ForeignKey(Entry, on_delete=models.CASCADE)

    # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∏–ø –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (Parameter)
    parameter = models.ForeignKey(Parameter, on_delete=models.CASCADE)

    # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–æ—Ç 0.0 –¥–æ 5.0)
    value = models.FloatField()

    class Meta:
        # –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ –ø–∞—Ä–µ: –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω –æ–¥–∏–Ω —Ä–∞–∑ –≤ –æ–¥–∏–Ω –¥–µ–Ω—å
        unique_together = ('entry', 'parameter')

    def __str__(self):
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω–∫–µ: "toshn = 3.0 (2025-05-12)"
        return f"{self.parameter.key} = {self.value} ({self.entry.date})"

    # –ü—Ä–∏–º–µ—Ä: EntryValue(entry=Entry(...), parameter=Parameter(...), value=3.0)

